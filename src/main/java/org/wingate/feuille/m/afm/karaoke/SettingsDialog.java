/*
 * Copyright (C) 2024 util2
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package org.wingate.feuille.m.afm.karaoke;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.StringReader;
import java.util.HashSet;
import java.util.Set;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import org.wingate.feuille.m.afm.karaoke.sfx.LineSyllableBasicSFX;
import org.wingate.feuille.m.afm.karaoke.sfx.SFXAbstract;
import org.wingate.feuille.util.DialogResult;

/**
 *
 * @author util2
 */
public class SettingsDialog extends javax.swing.JDialog {
    
    private DialogResult dialogResult = DialogResult.Unknown;

    private final DefaultComboBoxModel cboxModel = new DefaultComboBoxModel();
    private final DefaultListModel<String> namesModel = new DefaultListModel<>();
    private final Set<SFXAbstract> templates = new HashSet<>();
    
    /**
     * Creates new form SettingsDialog
     * @param parent
     * @param modal
     */
    public SettingsDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        
        cboxAFMEffects.setModel(cboxModel);
        cboxModel.addElement(new LineSyllableBasicSFX());
        
        listTemplates.setModel(namesModel);
    }
    
    public void showDialog(){
        setLocationRelativeTo(null);
        setVisible(true);
    }

    public DialogResult getDialogResult() {
        return dialogResult;
    }
    
    public Set<SFXAbstract> getTemplates(){
        return templates;
    }
    
    private void tryAddTemplate(SFXAbstract sfx, String humanName){        
        boolean add = true;
        
        // On vérifie si on n'a aucune autre entrée identique
        for(SFXAbstract o : templates){
            if(o.getHumanName().equalsIgnoreCase(humanName)){
                // On a trouvé une correspondance,
                // on dit de ne pas copier cette entrée
                add = false;
                break;
            }
        }
        
        // Si on a une entrée non identique
        if(add == true){
            // On crée de nouveaux objets pour ne pas avoir de doublons
            // qui se changent tels des jumeaux
            switch(sfx){
                case LineSyllableBasicSFX a -> {
                    LineSyllableBasicSFX x = new LineSyllableBasicSFX();
                    x.setHumanName(humanName);
                    templates.add(x);
                    namesModel.addElement(humanName);
                }
                default -> {}
            }
        }
        
        if(add == false){
            JOptionPane.showMessageDialog(
                    new javax.swing.JFrame(),
                    "Object already exists !",
                    "Error",
                    JOptionPane.ERROR_MESSAGE
            );
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        popTemplates = new javax.swing.JPopupMenu();
        popmRemove = new javax.swing.JMenuItem();
        popCommands = new javax.swing.JPopupMenu();
        popmSave = new javax.swing.JMenuItem();
        btnOK = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        cboxAFMEffects = new javax.swing.JComboBox<>();
        btnAdd = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        listTemplates = new javax.swing.JList<>();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        textPanelCommands = new javax.swing.JTextPane();
        jToolBar1 = new javax.swing.JToolBar();
        btnNewCode = new javax.swing.JButton();
        btnOpenCode = new javax.swing.JButton();
        btnSaveCode = new javax.swing.JButton();
        tabpCode = new javax.swing.JTabbedPane();

        popmRemove.setText("Remove selected elements");
        popmRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                popmRemoveActionPerformed(evt);
            }
        });
        popTemplates.add(popmRemove);

        popmSave.setText("Register commands");
        popmSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                popmSaveActionPerformed(evt);
            }
        });
        popCommands.add(popmSave);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        btnOK.setText("OK");
        btnOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOKActionPerformed(evt);
            }
        });

        btnCancel.setText("Cancel");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        cboxAFMEffects.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cboxAFMEffects.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cboxAFMEffectsItemStateChanged(evt);
            }
        });

        btnAdd.setText("Add");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane1.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        listTemplates.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        listTemplates.setComponentPopupMenu(popTemplates);
        listTemplates.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                listTemplatesValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(listTemplates);

        jLabel1.setText("Commands :");

        jScrollPane2.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane2.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        textPanelCommands.setComponentPopupMenu(popCommands);
        jScrollPane2.setViewportView(textPanelCommands);

        jToolBar1.setRollover(true);

        btnNewCode.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/32_newdocument.png"))); // NOI18N
        btnNewCode.setText("New code");
        btnNewCode.setFocusable(false);
        btnNewCode.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnNewCode.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnNewCode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewCodeActionPerformed(evt);
            }
        });
        jToolBar1.add(btnNewCode);

        btnOpenCode.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/32_folder.png"))); // NOI18N
        btnOpenCode.setText("Open code");
        btnOpenCode.setFocusable(false);
        btnOpenCode.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnOpenCode.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnOpenCode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOpenCodeActionPerformed(evt);
            }
        });
        jToolBar1.add(btnOpenCode);

        btnSaveCode.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/32_floppydisk.png"))); // NOI18N
        btnSaveCode.setText("Save code");
        btnSaveCode.setFocusable(false);
        btnSaveCode.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnSaveCode.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnSaveCode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveCodeActionPerformed(evt);
            }
        });
        jToolBar1.add(btnSaveCode);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(cboxAFMEffects, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane2)
                            .addComponent(tabpCode)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jToolBar1, javax.swing.GroupLayout.DEFAULT_SIZE, 600, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnCancel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnOK)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cboxAFMEffects, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAdd))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tabpCode, javax.swing.GroupLayout.DEFAULT_SIZE, 246, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnOK)
                            .addComponent(btnCancel))
                        .addContainerGap())
                    .addComponent(jToolBar1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnNewCodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewCodeActionPerformed
        // Charge le sélecteur de type de code
        CodeTypeDialog ctd = new CodeTypeDialog(new javax.swing.JFrame(), true);
        ctd.showDialog();
        if(ctd.getDialogResult() == DialogResult.Ok){
            CodePanel cp = new CodePanel();
            cp.setCodeType(ctd.getCodeType());
            tabpCode.add(cp);
            String name = JOptionPane.showInputDialog("Type a name for the new tab.");
            CodeTabPanel ctp = new CodeTabPanel(ctd.getCodeType(), tabpCode, tabpCode.getTabCount() - 1, name);
            tabpCode.setTabComponentAt(tabpCode.getTabCount() - 1, ctp);
        }
    }//GEN-LAST:event_btnNewCodeActionPerformed

    private void btnOpenCodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOpenCodeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnOpenCodeActionPerformed

    private void btnSaveCodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveCodeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnSaveCodeActionPerformed

    private void cboxAFMEffectsItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cboxAFMEffectsItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_cboxAFMEffectsItemStateChanged

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        // Add preset to template list
        if(cboxAFMEffects.getSelectedIndex() < 0) return;
        if(cboxAFMEffects.getSelectedItem() instanceof SFXAbstract sfx){
            String humanName = JOptionPane.showInputDialog("Type a name :");
            tryAddTemplate(sfx, humanName);
        }        
    }//GEN-LAST:event_btnAddActionPerformed

    private void popmRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_popmRemoveActionPerformed
        // Remove templates
        if(listTemplates.getSelectedIndex() < 0) return;
        int z = JOptionPane.showConfirmDialog(
                new javax.swing.JFrame(),
                "Do you really want to delete these templates ?",
                "Confirm",
                JOptionPane.OK_CANCEL_OPTION,
                JOptionPane.QUESTION_MESSAGE
        );
        if(z == JOptionPane.OK_OPTION){
            int[] indices = listTemplates.getSelectedIndices();
            for(int i=indices.length-1; i >= 0; i--){
                if(namesModel.getElementAt(i) instanceof String name){
                    SFXAbstract a = null;
                    for(int j=0; j<templates.size(); j++){
                        SFXAbstract o = templates.toArray(SFXAbstract[]::new)[j];
                        if(o.getHumanName().equalsIgnoreCase(name)){
                            a = o;
                        }
                    }
                    if(a != null){
                        templates.remove(a);
                        namesModel.remove(indices[i]);
                    }                    
                }
            }
        }
    }//GEN-LAST:event_popmRemoveActionPerformed

    private void listTemplatesValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_listTemplatesValueChanged
        // When selection of a name
        if(listTemplates.getSelectedIndex() < 0) return; // Psychotic unused option
        if(namesModel.getElementAt(listTemplates.getSelectedIndex()) instanceof String name){
            SFXAbstract a = null;
            for(int j=0; j<templates.size(); j++){
                SFXAbstract o = templates.toArray(SFXAbstract[]::new)[j];
                if(o.getHumanName().equalsIgnoreCase(name)){
                    a = o;
                }
            }
            if(a == null) return;
            StringBuilder sb = new StringBuilder();
            for(String commands : a.getTemplates()){
                sb.append(commands);
                sb.append("\n");
            }
            textPanelCommands.setText(sb.toString());
            textPanelCommands.updateUI();
        }
    }//GEN-LAST:event_listTemplatesValueChanged

    private void popmSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_popmSaveActionPerformed
        // Save commands
        if(listTemplates.getSelectedIndex() < 0){
            JOptionPane.showMessageDialog(new javax.swing.JFrame(), "No selection !",
                    "Warning", JOptionPane.WARNING_MESSAGE);
        }else{
            if(namesModel.getElementAt(listTemplates.getSelectedIndex()) instanceof String name){
                
                SFXAbstract a = null;
                for(int j=0; j<templates.size(); j++){
                    SFXAbstract o = templates.toArray(SFXAbstract[]::new)[j];
                    if(o.getHumanName().equalsIgnoreCase(name)){
                        a = o;
                    }
                }
                if(a == null) return;                
                
                try(StringReader sr = new StringReader(textPanelCommands.getText());
                        BufferedReader br = new BufferedReader(sr);){
                    String line;
                    int z = JOptionPane.showConfirmDialog(new javax.swing.JFrame(),
                            "Do you want to keep existing commands ?", "Do not clear existing commands",
                            JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
                    if(z == JOptionPane.NO_OPTION){
                        a.getTemplates().clear();
                    }
                    
                    while((line = br.readLine()) != null){
                        a.getTemplates().add(line);
                    }
                } catch (IOException ex) {
                    Logger.getLogger(SettingsDialog.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }        
    }//GEN-LAST:event_popmSaveActionPerformed

    private void btnOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOKActionPerformed
        // OK
        dialogResult = DialogResult.Ok;
        setVisible(false);
        dispose();
    }//GEN-LAST:event_btnOKActionPerformed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        // Cancel
        dialogResult = DialogResult.Cancel;
        setVisible(false);
        dispose();
    }//GEN-LAST:event_btnCancelActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SettingsDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SettingsDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SettingsDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SettingsDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                SettingsDialog dialog = new SettingsDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnNewCode;
    private javax.swing.JButton btnOK;
    private javax.swing.JButton btnOpenCode;
    private javax.swing.JButton btnSaveCode;
    private javax.swing.JComboBox<String> cboxAFMEffects;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JList<String> listTemplates;
    private javax.swing.JPopupMenu popCommands;
    private javax.swing.JPopupMenu popTemplates;
    private javax.swing.JMenuItem popmRemove;
    private javax.swing.JMenuItem popmSave;
    private javax.swing.JTabbedPane tabpCode;
    private javax.swing.JTextPane textPanelCommands;
    // End of variables declaration//GEN-END:variables
}
