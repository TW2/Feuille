/*
 * Copyright (C) 2023 util2
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package org.wingate.virginsheet.module;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.io.PrintWriter;
import java.nio.charset.StandardCharsets;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import javax.swing.filechooser.FileFilter;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeModel;
import org.wingate.assj.ASS;
import org.wingate.virginsheet.Theme;

/**
 *
 * @author util2
 */
public class KaraokePanel extends javax.swing.JPanel {
    
    private Theme chosenTheme = new Theme();
    private final KaraokeTableModel srcModel;
    private final KaraokeTableModel dstModel;
    private final DefaultMutableTreeNode root;
    private final DefaultTreeModel kfxTreeModel;
    private final KaraokeTreeRenderer kfxTreeRenderer;

    /**
     * Creates new form KaraokePanel
     */
    public KaraokePanel(){
        initComponents();
        
        srcModel = new KaraokeTableModel(srcTable, this);
        dstModel = new KaraokeTableModel(dstTable, this);
        
        root = new DefaultMutableTreeNode("Effects");
        kfxTreeModel = new DefaultTreeModel(root);
        effectsTree.setModel(kfxTreeModel);
        kfxTreeRenderer = new KaraokeTreeRenderer();
        effectsTree.setCellRenderer(kfxTreeRenderer);
        
        for(FileFilter ff : srcFileChooser.getChoosableFileFilters()){
            srcFileChooser.removeChoosableFileFilter(ff);
        }
        srcFileChooser.addChoosableFileFilter(new FileFilter(){
            @Override
            public boolean accept(File f) {
                if(f.isDirectory()) return true;
                return f.getName().endsWith(".ass");
            }

            @Override
            public String getDescription() {
                return "Advanced Sub Station files (*.ass)";
            }
        });
        
        for(FileFilter ff : dstFileChooser.getChoosableFileFilters()){
            dstFileChooser.removeChoosableFileFilter(ff);
        }
        dstFileChooser.addChoosableFileFilter(new FileFilter(){
            @Override
            public boolean accept(File f) {
                if(f.isDirectory()) return true;
                return f.getName().endsWith(".ass");
            }

            @Override
            public String getDescription() {
                return "Advanced Sub Station files (*.ass)";
            }
        });
        
        for(FileFilter ff : jsFileChooser.getChoosableFileFilters()){
            jsFileChooser.removeChoosableFileFilter(ff);
        }
        jsFileChooser.addChoosableFileFilter(new FileFilter(){
            @Override
            public boolean accept(File f) {
                if(f.isDirectory()) return true;
                return f.getName().endsWith(".js");
            }

            @Override
            public String getDescription() {
                return "JavaScript files (*.js)";
            }
        });
        
    }
    
    public void setTheme(Theme th){
        chosenTheme = th;
    }
    
    public Theme getTheme(){
        return chosenTheme;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        srcFileChooser = new javax.swing.JFileChooser();
        dstFileChooser = new javax.swing.JFileChooser();
        jsFileChooser = new javax.swing.JFileChooser();
        jPanel5 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jToolBar1 = new javax.swing.JToolBar();
        btnSrcOpen = new javax.swing.JButton();
        btnSrcSave = new javax.swing.JButton();
        btnSrcByLine = new javax.swing.JButton();
        btnSrcByBlock = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        srcTable = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jToolBar2 = new javax.swing.JToolBar();
        btnDstSave = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        dstTable = new javax.swing.JTable();
        jPanel4 = new javax.swing.JPanel();
        jToolBar3 = new javax.swing.JToolBar();
        btnApplyTo = new javax.swing.JButton();
        btnCreate = new javax.swing.JButton();
        btnModify = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        effectsTree = new javax.swing.JTree();
        jPanel6 = new javax.swing.JPanel();
        jToolBar4 = new javax.swing.JToolBar();
        btnJsNew = new javax.swing.JButton();
        btnJsOpen = new javax.swing.JButton();
        btnJsSave = new javax.swing.JButton();
        btnJsApply = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        jsTextPane = new javax.swing.JTextPane();

        setLayout(new java.awt.BorderLayout());

        jPanel5.setLayout(new java.awt.BorderLayout());

        jPanel3.setLayout(new java.awt.GridLayout(2, 1));

        jPanel1.setLayout(new java.awt.BorderLayout());

        jToolBar1.setRollover(true);

        btnSrcOpen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/32_folder.png"))); // NOI18N
        btnSrcOpen.setToolTipText("Open source file");
        btnSrcOpen.setFocusable(false);
        btnSrcOpen.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnSrcOpen.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnSrcOpen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSrcOpenActionPerformed(evt);
            }
        });
        jToolBar1.add(btnSrcOpen);

        btnSrcSave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/32_floppydisk.png"))); // NOI18N
        btnSrcSave.setToolTipText("Save source file");
        btnSrcSave.setFocusable(false);
        btnSrcSave.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnSrcSave.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnSrcSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSrcSaveActionPerformed(evt);
            }
        });
        jToolBar1.add(btnSrcSave);

        btnSrcByLine.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/AFM-ExecuteForOneLine.png"))); // NOI18N
        btnSrcByLine.setToolTipText("Treatment by line");
        btnSrcByLine.setFocusable(false);
        btnSrcByLine.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnSrcByLine.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnSrcByLine.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSrcByLineActionPerformed(evt);
            }
        });
        jToolBar1.add(btnSrcByLine);

        btnSrcByBlock.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/AFM-ExecuteForFewLines.png"))); // NOI18N
        btnSrcByBlock.setToolTipText("Treatment by block");
        btnSrcByBlock.setFocusable(false);
        btnSrcByBlock.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnSrcByBlock.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnSrcByBlock.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSrcByBlockActionPerformed(evt);
            }
        });
        jToolBar1.add(btnSrcByBlock);

        jPanel1.add(jToolBar1, java.awt.BorderLayout.NORTH);

        jScrollPane1.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        srcTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(srcTable);

        jPanel1.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        jPanel3.add(jPanel1);

        jPanel2.setLayout(new java.awt.BorderLayout());

        jToolBar2.setRollover(true);

        btnDstSave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/32_floppydisk.png"))); // NOI18N
        btnDstSave.setToolTipText("Save result");
        btnDstSave.setFocusable(false);
        btnDstSave.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnDstSave.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnDstSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDstSaveActionPerformed(evt);
            }
        });
        jToolBar2.add(btnDstSave);

        jPanel2.add(jToolBar2, java.awt.BorderLayout.NORTH);

        jScrollPane2.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        dstTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(dstTable);

        jPanel2.add(jScrollPane2, java.awt.BorderLayout.CENTER);

        jPanel3.add(jPanel2);

        jPanel5.add(jPanel3, java.awt.BorderLayout.CENTER);

        jPanel4.setLayout(new java.awt.BorderLayout());

        jToolBar3.setRollover(true);

        btnApplyTo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/32px-Crystal_Clear_action_apply.png"))); // NOI18N
        btnApplyTo.setToolTipText("Apply to all selected lines");
        btnApplyTo.setFocusable(false);
        btnApplyTo.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnApplyTo.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnApplyTo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnApplyToActionPerformed(evt);
            }
        });
        jToolBar3.add(btnApplyTo);

        btnCreate.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/32_plus.png"))); // NOI18N
        btnCreate.setToolTipText("Create new effect");
        btnCreate.setFocusable(false);
        btnCreate.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnCreate.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnCreate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateActionPerformed(evt);
            }
        });
        jToolBar3.add(btnCreate);

        btnModify.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/32_timer_stuffs_blue.png"))); // NOI18N
        btnModify.setToolTipText("Modify selected effect");
        btnModify.setFocusable(false);
        btnModify.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnModify.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnModify.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModifyActionPerformed(evt);
            }
        });
        jToolBar3.add(btnModify);

        btnDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/32_minus.png"))); // NOI18N
        btnDelete.setToolTipText("Delete selected effects");
        btnDelete.setFocusable(false);
        btnDelete.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnDelete.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });
        jToolBar3.add(btnDelete);

        jPanel4.add(jToolBar3, java.awt.BorderLayout.NORTH);

        jScrollPane3.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
        jScrollPane3.setViewportView(effectsTree);

        jPanel4.add(jScrollPane3, java.awt.BorderLayout.CENTER);

        jPanel5.add(jPanel4, java.awt.BorderLayout.EAST);

        add(jPanel5, java.awt.BorderLayout.CENTER);

        jPanel6.setPreferredSize(new java.awt.Dimension(500, 170));
        jPanel6.setLayout(new java.awt.BorderLayout());

        jToolBar4.setRollover(true);

        btnJsNew.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/32_newdocument.png"))); // NOI18N
        btnJsNew.setToolTipText("Create a new JavaScript effects file");
        btnJsNew.setFocusable(false);
        btnJsNew.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnJsNew.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnJsNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnJsNewActionPerformed(evt);
            }
        });
        jToolBar4.add(btnJsNew);

        btnJsOpen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/32_folder.png"))); // NOI18N
        btnJsOpen.setToolTipText("Open a JavaScript effects file");
        btnJsOpen.setFocusable(false);
        btnJsOpen.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnJsOpen.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnJsOpen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnJsOpenActionPerformed(evt);
            }
        });
        jToolBar4.add(btnJsOpen);

        btnJsSave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/32_floppydisk.png"))); // NOI18N
        btnJsSave.setToolTipText("Save a JavaScript effects file");
        btnJsSave.setFocusable(false);
        btnJsSave.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnJsSave.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnJsSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnJsSaveActionPerformed(evt);
            }
        });
        jToolBar4.add(btnJsSave);

        btnJsApply.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/32px-Crystal_Clear_action_apply.png"))); // NOI18N
        btnJsApply.setToolTipText("Apply modifications or add a new effect");
        btnJsApply.setFocusable(false);
        btnJsApply.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnJsApply.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnJsApply.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnJsApplyActionPerformed(evt);
            }
        });
        jToolBar4.add(btnJsApply);

        jPanel6.add(jToolBar4, java.awt.BorderLayout.NORTH);

        jScrollPane4.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
        jScrollPane4.setViewportView(jsTextPane);

        jPanel6.add(jScrollPane4, java.awt.BorderLayout.CENTER);

        add(jPanel6, java.awt.BorderLayout.SOUTH);
    }// </editor-fold>//GEN-END:initComponents

    private void btnSrcOpenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSrcOpenActionPerformed
        // SRC Open file at top table
        
        // Customize fcLoad with light theme
        try{
            UIManager.setLookAndFeel(chosenTheme.getTheme());
            SwingUtilities.updateComponentTreeUI(srcFileChooser);
        }catch(UnsupportedLookAndFeelException exc){
            System.err.println("Look and feel error!");
        }
        
        srcFileChooser.updateUI();
        
        int z = srcFileChooser.showOpenDialog(this);
        if(z == JFileChooser.APPROVE_OPTION){
            srcModel.setAss(ASS.Read(srcFileChooser.getSelectedFile().getPath()));
        }
    }//GEN-LAST:event_btnSrcOpenActionPerformed

    private void btnSrcSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSrcSaveActionPerformed
        // SRC Save file at top table
        
        // Customize fcLoad with light theme
        try{
            UIManager.setLookAndFeel(chosenTheme.getTheme());
            SwingUtilities.updateComponentTreeUI(srcFileChooser);
        }catch(UnsupportedLookAndFeelException exc){
            System.err.println("Look and feel error!");
        }
        
        srcFileChooser.updateUI();
        
        int z = srcFileChooser.showSaveDialog(this);
        if(z == JFileChooser.APPROVE_OPTION){
            ASS.Save(srcFileChooser.getSelectedFile().getPath(), srcModel.getAss());
        }
    }//GEN-LAST:event_btnSrcSaveActionPerformed

    private void btnSrcByLineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSrcByLineActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnSrcByLineActionPerformed

    private void btnSrcByBlockActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSrcByBlockActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnSrcByBlockActionPerformed

    private void btnDstSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDstSaveActionPerformed
        // DST Save file at bottom table
        
        // Customize fcLoad with light theme
        try{
            UIManager.setLookAndFeel(chosenTheme.getTheme());
            SwingUtilities.updateComponentTreeUI(dstFileChooser);
        }catch(UnsupportedLookAndFeelException exc){
            System.err.println("Look and feel error!");
        }
        
        dstFileChooser.updateUI();
        
        int z = dstFileChooser.showSaveDialog(this);
        if(z == JFileChooser.APPROVE_OPTION){
            ASS.Save(dstFileChooser.getSelectedFile().getPath(), dstModel.getAss());
        }
    }//GEN-LAST:event_btnDstSaveActionPerformed

    private void btnApplyToActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnApplyToActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnApplyToActionPerformed

    private void btnCreateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnCreateActionPerformed

    private void btnModifyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModifyActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnModifyActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnJsNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnJsNewActionPerformed
        // JS Close old file if any and create new file at last bottom area
        if(jsTextPane.getText().isEmpty() == false){
            int res = JOptionPane.showConfirmDialog(
                    this,
                    "Do you want to save existing text ?",
                    "Question",
                    JOptionPane.YES_NO_OPTION,
                    JOptionPane.QUESTION_MESSAGE
            );            
            if(res == JOptionPane.YES_OPTION){
                // Save
                
                // Customize fcLoad with light theme
                try{
                    UIManager.setLookAndFeel(chosenTheme.getTheme());
                    SwingUtilities.updateComponentTreeUI(jsFileChooser);
                }catch(UnsupportedLookAndFeelException exc){
                    System.err.println("Look and feel error!");
                }

                jsFileChooser.updateUI();
                
                int z = jsFileChooser.showSaveDialog(this);
                if(z == JFileChooser.APPROVE_OPTION){
                    File file = jsFileChooser.getSelectedFile();
                    try(PrintWriter pw = new PrintWriter(file, StandardCharsets.UTF_8);){
                        pw.print(jsTextPane.getText());
                    } catch (IOException ex) {
                        Logger.getLogger(KaraokePanel.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            }
        }
        jsTextPane.setText("");
    }//GEN-LAST:event_btnJsNewActionPerformed

    private void btnJsOpenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnJsOpenActionPerformed
        // JS Open file at last bottom area
        
        // Customize fcLoad with light theme
        try{
            UIManager.setLookAndFeel(chosenTheme.getTheme());
            SwingUtilities.updateComponentTreeUI(jsFileChooser);
        }catch(UnsupportedLookAndFeelException exc){
            System.err.println("Look and feel error!");
        }
        
        jsFileChooser.updateUI();
        
        int z = jsFileChooser.showOpenDialog(this);
        if(z == JFileChooser.APPROVE_OPTION){
            StringBuilder sb = new StringBuilder();
            File file = jsFileChooser.getSelectedFile();
            try(FileReader fr = new FileReader(file); BufferedReader br = new BufferedReader(fr);){
                String line;
                while ((line = br.readLine()) != null){
                    sb.append(line);
                    sb.append("\n");
                }
            } catch (FileNotFoundException ex) {
                Logger.getLogger(KaraokePanel.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(KaraokePanel.class.getName()).log(Level.SEVERE, null, ex);
            }
            jsTextPane.setText(sb.toString());
        }
    }//GEN-LAST:event_btnJsOpenActionPerformed

    private void btnJsSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnJsSaveActionPerformed
        // JS Save file at last bottom area
        
        // Customize fcLoad with light theme
        try{
            UIManager.setLookAndFeel(chosenTheme.getTheme());
            SwingUtilities.updateComponentTreeUI(jsFileChooser);
        }catch(UnsupportedLookAndFeelException exc){
            System.err.println("Look and feel error!");
        }
        
        jsFileChooser.updateUI();
        
        int z = jsFileChooser.showSaveDialog(this);
        if(z == JFileChooser.APPROVE_OPTION){
            File file = jsFileChooser.getSelectedFile();
            if(file.getName().endsWith(".js") == false){
                file = new File(file.getParentFile(), file.getName().concat(".js"));
            }
            try(PrintWriter pw = new PrintWriter(file, StandardCharsets.UTF_8);){
                pw.print(jsTextPane.getText());
            } catch (IOException ex) {
                Logger.getLogger(KaraokePanel.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btnJsSaveActionPerformed

    private void btnJsApplyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnJsApplyActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnJsApplyActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnApplyTo;
    private javax.swing.JButton btnCreate;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnDstSave;
    private javax.swing.JButton btnJsApply;
    private javax.swing.JButton btnJsNew;
    private javax.swing.JButton btnJsOpen;
    private javax.swing.JButton btnJsSave;
    private javax.swing.JButton btnModify;
    private javax.swing.JButton btnSrcByBlock;
    private javax.swing.JButton btnSrcByLine;
    private javax.swing.JButton btnSrcOpen;
    private javax.swing.JButton btnSrcSave;
    private javax.swing.JFileChooser dstFileChooser;
    private javax.swing.JTable dstTable;
    private javax.swing.JTree effectsTree;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JToolBar jToolBar2;
    private javax.swing.JToolBar jToolBar3;
    private javax.swing.JToolBar jToolBar4;
    private javax.swing.JFileChooser jsFileChooser;
    private javax.swing.JTextPane jsTextPane;
    private javax.swing.JFileChooser srcFileChooser;
    private javax.swing.JTable srcTable;
    // End of variables declaration//GEN-END:variables
}
